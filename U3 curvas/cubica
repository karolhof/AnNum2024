#include <iostream>
#include <vector>
#include <iomanip>

using namespace std;

// Definir variables globales
vector<double> x_vals = {0, 1, 2, 3}; // Valores de X
vector<double> y_vals = {1, 2.7182, 7.3891, 20.0855}; // Valores de Y
int n = x_vals.size(); // Número de puntos

// Función para calcular la trazadora cúbica
void trazadoraCubica() {
    vector<double> h(n - 1), alfa(n - 1), l(n), mu(n), z(n);
    vector<double> a = y_vals, b(n - 1), c(n), d(n - 1);

    // Calcular los valores h y alfa
    for (int i = 0; i < n - 1; i++) {
        h[i] = x_vals[i + 1] - x_vals[i];
        if (i > 0) {
            alfa[i] = (3 / h[i]) * (a[i + 1] - a[i]) - (3 / h[i - 1]) * (a[i] - a[i - 1]);
        }
    }

    // Paso 2: Definir los valores de l, mu y z
    l[0] = 1;
    mu[0] = z[0] = 0;

    for (int i = 1; i < n - 1; i++) {
        l[i] = 2 * (x_vals[i + 1] - x_vals[i - 1]) - h[i - 1] * mu[i - 1];
        mu[i] = h[i] / l[i];
        z[i] = (alfa[i] - h[i - 1] * z[i - 1]) / l[i];
    }

    l[n - 1] = 1;
    z[n - 1] = c[n - 1] = 0;

    // Paso 3: Calcular b, c y d
    for (int j = n - 2; j >= 0; j--) {
        c[j] = z[j] - mu[j] * c[j + 1];
        b[j] = (a[j + 1] - a[j]) / h[j] - h[j] * (c[j + 1] + 2 * c[j]) / 3;
        d[j] = (c[j + 1] - c[j]) / (3 * h[j]);
    }

    // Mostrar los resultados
    cout << "Resultados de la trazadora cúbica:\n";
    for (int i = 0; i < n - 1; i++) {
        cout << "Polinomio entre [" << x_vals[i] << ", " << x_vals[i + 1] << "]:\n";
        cout << "y = " << a[i] << " + " << b[i] << "(x - " << x_vals[i] << ") + "
             << c[i] << "(x - " << x_vals[i] << ")^2 + " << d[i] << "(x - " << x_vals[i] << ")^3\n";
    }
}

int main() {
    trazadoraCubica();
    return 0;
}
